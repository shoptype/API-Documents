openapi: 3.0.0
info:
  title: Awake Money
  version: '1.0'
  description: |-
    For payouts awake money has the following intgerations

    | Currency | Provider |
    | ------ | ------ |
    | INR | Razorpay |
    | USD | Stripe |
    | CAD | Stripe |
servers:
  - url: 'https://dev-backend.awake.money'
    description: dev
  - url: 'https://beta-backend.awake.money'
    description: beta
  - url: 'https://backend.awake.money'
    description: prod
paths:
  /login:
    post:
      summary: Login user
      operationId: post-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  status:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            minLength: 1
                          email:
                            type: string
                            minLength: 1
                          firstName:
                            type: string
                            minLength: 1
                          lastName:
                            type: string
                            minLength: 1
                          phone:
                            type: string
                        required:
                          - id
                          - email
                          - firstName
                          - lastName
                          - phone
                    required:
                      - user
                  token:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
                  - data
                  - token
              examples:
                Successful login:
                  value:
                    status: success
                    message: User logged in successfully
                    data:
                      user:
                        id: f1b7b518-722c-4a15-8cad-b0588b036c57
                        email: tata.vendor@mailinator.com
                        firstName: Tata
                        lastName: Vendor
                        phone: ''
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJpZCI6ImYxYjdiNTE4LTcyMmMtNGExNS04Y2FkLWIwNTg4YjAzNmM1NyIsImVtYWlsIjoiIiwiaXNzIjoiYXdha2UtbW9uZXkifQ.A-QMq0MWN06JTfkvUN_wd_bQiQ4Es0n-O23EeQjujTw
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  errorCode:
                    type: string
                    minLength: 1
                  message:
                    type: string
                required:
                  - code
                  - errorCode
                  - message
              examples:
                Wrong password:
                  value:
                    code: 409
                    errorCode: Invalid email or password
                    message: ''
      description: Login user
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
              required:
                - email
                - password
            examples:
              Login user sample:
                value:
                  email: tata.vendor@mailinator.com
                  password: Ayusht@007
      parameters: []
      tags:
        - user
  /social-login:
    post:
      summary: Social login
      operationId: post-social-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  status:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            minLength: 1
                          email:
                            type: string
                            minLength: 1
                          firstName:
                            type: string
                            minLength: 1
                          lastName:
                            type: string
                            minLength: 1
                          phone:
                            type: string
                        required:
                          - id
                          - email
                          - firstName
                          - lastName
                          - phone
                    required:
                      - user
                  token:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
                  - data
                  - token
              examples:
                Successful login:
                  value:
                    status: success
                    message: User Logged in successfully
                    data:
                      user:
                        id: e2594521-c298-4b3c-a763-213c573d8bf2
                        email: skbarik@gmail.com
                        firstName: sarthak
                        lastName: barik
                        phone: ''
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJpZCI6ImUyNTk0NTIxLWMyOTgtNGIzYy1hNzYzLTIxM2M1NzNkOGJmMiIsImVtYWlsIjoiIiwiaXNzIjoiYXdha2UtbW9uZXkifQ.tzp7tcb33ZUFvA81F0bths07ez0wC05kx4IYSfqiREQ
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  code:
                    type: number
                  errorCode:
                    type: string
                    minLength: 1
                  message:
                    type: string
                required:
                  - code
                  - errorCode
                  - message
              examples:
                Wrong credentials:
                  value:
                    code: 404
                    errorCode: Request failed with status code 400
                    message: ''
      description: Allow a user to login via social platforms like google and facebook
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                token:
                  type: string
                  minLength: 1
                  description: Oauth token
                provider:
                  type: string
                  minLength: 1
                  enum:
                    - GOOGLE
                    - FACEBOOK
                domain:
                  type: string
                  minLength: 1
              required:
                - token
                - provider
                - domain
            examples:
              Social login sample body:
                value:
                  token: eyJhbGciOiJSUzI1NiIsImtpZCI6IjdkYTc4NjNlODYzN2Q2NjliYzJhMTI2MjJjZWRlMmE4ODEzZDExYjEiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJhY2NvdW50cy5nb29nbGUuY29tIiwiYXpwIjoiMjg0MTMxMjMzNjMxLWVhc3JzNGp1bDNhb25mcWI0M3NkNzdhMzg5M21vbWNnLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwiYXVkIjoiMjg0MTMxMjMzNjMxLWVhc3JzNGp1bDNhb25mcWI0M3NkNzdhMzg5M21vbWNnLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwic3ViIjoiMTEyMTY3MTU3MTYwNjY5OTEyMTEzIiwiaGQiOiJjb2ZmZWViZWFucy5pbyIsImVtYWlsIjoiYXl1c2hAY29mZmVlYmVhbnMuaW8iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiYXRfaGFzaCI6InRJYVhCTF8tMEQ2T2RZa3pBZHNMYUEiLCJuYW1lIjoiQXl1c2ggVGl3YXJpIiwicGljdHVyZSI6Imh0dHBzOi8vbGg1Lmdvb2dsZXVzZXJjb250ZW50LmNvbS8tc1BiOW1SUXBUaXMvQUFBQUFBQUFBQUkvQUFBQUFBQUFBQUEvQU1adXVjazZsV0ZPaGw3WFlJdXN3YkR4S3BwVTVxbnVlZy9zOTYtYy9waG90by5qcGciLCJnaXZlbl9uYW1lIjoiQXl1c2giLCJmYW1pbHlfbmFtZSI6IlRpd2FyaSIsImxvY2FsZSI6ImVuIiwiaWF0IjoxNjAyNzUyMDcyLCJleHAiOjE2MDI3NTU2NzIsImp0aSI6IjI2MjY0ZjA3NDNmODBiNGRiMDUzMzZmZTYxZDMwMDNmZDBkYWYxNjMifQ.YPDwAREiUaQTKhIM4jzwntCvK1eU5Tu9pBup1foDDDFpYItsQ4Z_5KiyMo90rqE65TDoq4T3BiDTwSijulrSdFZApaUBReWq_HHCT0Xi_9qRjfodEmGTU2ivn2E3LqSwe6FFb2AM24i4M4gVN_ReRKON981xFm0Os-S4NamkCpFq71JL47TQaDVOczI6xI0yj35ac9rgvjM8RAph27fxX2Rpsm1YZ4bf8rijGkdR90DwL6GAHtzFc6MaKuDfddJBS_VoGHrhSTIVopK3sjHCNM-qDgy2ykNdN8tRsrLn3MeKckJJ8_jGGG_SWMpflgoOnYQjt5j6l5wBhJgxcX1Dag
                  provider: GOOGLE
                  domain: SHOPTYPE
      tags:
        - user
  /me:
    get:
      summary: Get user profile
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  created_at:
                    type: string
                    minLength: 1
                  updated_at:
                    type: string
                    minLength: 1
                  deleted_at:
                    type: object
                    properties:
                      Time:
                        type: string
                        minLength: 1
                      Valid:
                        type: boolean
                    required:
                      - Time
                      - Valid
                  id:
                    type: string
                    minLength: 1
                  firstName:
                    type: string
                    minLength: 1
                  lastName:
                    type: string
                    minLength: 1
                  email:
                    type: string
                    minLength: 1
                  phone:
                    type: string
                required:
                  - created_at
                  - updated_at
                  - deleted_at
                  - id
                  - firstName
                  - lastName
                  - email
                  - phone
              examples:
                Sample user profile:
                  value:
                    created_at: '2020-11-02T15:28:20.977403Z'
                    updated_at: '2020-11-02T15:28:20.977403Z'
                    deleted_at:
                      Time: '0001-01-01T00:00:00Z'
                      Valid: false
                    id: e2594521-c298-4b3c-a763-213c573d8bf2
                    firstName: sarthak
                    lastName: barik
                    email: skbarik@gmail.com
                    phone: ''
        '401':
          description: Unauthorized
      operationId: get-me
      description: Fetch user profile details
      parameters:
        - schema:
            type: string
          in: header
          name: authorization
          description: user token
          required: true
  /transactions:
    get:
      summary: Fetch transactions
      tags:
        - transaction
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
              examples:
                Sample transactions:
                  value:
                    - id: 1422
                      amount: 3.89
                      entry_type: C
                      created_at: '2021-02-13T18:08:38.865135Z'
                      transaction_id: 283
                      account_id: 11
                      asset_type_id: 2
                      ref: 'Order purchased on shop-type for order : 1518'
                      asset_type_unit: usd
                    - id: 464
                      amount: 2.48
                      entry_type: C
                      created_at: '2020-11-18T01:18:14.989803Z'
                      transaction_id: 53
                      account_id: 11
                      asset_type_id: 2
                      ref: 'Order purchased on shop-type for order : 824'
                      asset_type_unit: usd
                    - id: 465
                      amount: 2.48
                      entry_type: C
                      created_at: '2020-11-18T01:18:14.989803Z'
                      transaction_id: 53
                      account_id: 11
                      asset_type_id: 2
                      ref: 'Order purchased on shop-type for order : 824'
                      asset_type_unit: usd
                    - id: 459
                      amount: 2.48
                      entry_type: C
                      created_at: '2020-11-17T13:51:37.548045Z'
                      transaction_id: 52
                      account_id: 11
                      asset_type_id: 2
                      ref: 'Order purchased on shop-type for order : 821'
                      asset_type_unit: usd
                    - id: 458
                      amount: 2.48
                      entry_type: C
                      created_at: '2020-11-17T13:51:37.548045Z'
                      transaction_id: 52
                      account_id: 11
                      asset_type_id: 2
                      ref: 'Order purchased on shop-type for order : 821'
                      asset_type_unit: usd
                    - id: 461
                      amount: 14.88
                      entry_type: C
                      created_at: '2020-11-17T13:51:37.548045Z'
                      transaction_id: 52
                      account_id: 11
                      asset_type_id: 2
                      ref: 'Order purchased on shop-type for order : 821'
                      asset_type_unit: usd
                    - id: 435
                      amount: 14.88
                      entry_type: C
                      created_at: '2020-11-17T11:43:11.061935Z'
                      transaction_id: 50
                      account_id: 11
                      asset_type_id: 2
                      ref: 'Order purchased on shop-type for order : 819'
                      asset_type_unit: usd
                    - id: 439
                      amount: 2.48
                      entry_type: C
                      created_at: '2020-11-17T11:43:11.061935Z'
                      transaction_id: 50
                      account_id: 11
                      asset_type_id: 2
                      ref: 'Order purchased on shop-type for order : 819'
                      asset_type_unit: usd
                    - id: 438
                      amount: 2.48
                      entry_type: C
                      created_at: '2020-11-17T11:43:11.061935Z'
                      transaction_id: 50
                      account_id: 11
                      asset_type_id: 2
                      ref: 'Order purchased on shop-type for order : 819'
                      asset_type_unit: usd
                    - id: 57
                      amount: 74.87
                      entry_type: C
                      created_at: '2020-11-02T15:30:33.031938Z'
                      transaction_id: 8
                      account_id: 11
                      asset_type_id: 2
                      ref: 'Order purchased on shop-type for order : T011-0002-20'
                      asset_type_unit: usd
      operationId: get-transactions
      description: Fetch transactions
      parameters:
        - schema:
            type: string
          in: header
          name: authorization
          description: user token
          required: true
        - schema:
            type: string
          in: query
          name: currency
          description: Currency in string
  /accounts:
    get:
      summary: Fetch accounts
      tags:
        - account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
              examples:
                Sample accounts:
                  value:
                    - created_at: '2020-10-30T11:11:46.647121Z'
                      updated_at: '2020-10-30T11:11:46.647122Z'
                      deleted_at:
                        Time: '0001-01-01T00:00:00Z'
                        Valid: false
                      id: 2
                      name: sarthak_account
                      amount: 114.55
                      amount_on_hold: 8.85
                      user_id: e2594521-c298-4b3c-a763-213c573d8bf2
                      account_type_id: 2
                      asset_type_id: 2
                      asset_type: cash
                      asset_type_unit: usd
      operationId: get-accounts
      description: Fetch accounts for a given user
      parameters:
        - schema:
            type: string
          in: header
          name: authorization
          description: user token
          required: true
  /linked-account:
    post:
      summary: Create a linked account
      tags:
        - linkedAccount
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    linked_account:
                      created_at: '2021-07-13T00:01:04.28885+05:30'
                      updated_at: '2021-07-13T00:01:04.28885+05:30'
                      deleted_at:
                        Time: '0001-01-01T00:00:00Z'
                        Valid: false
                      ID: 3
                      type: stripe
                      token: null
                      amount: 0
                      account_id: 2
                      linked_account_id: 18
                    slug: 'https://connect.stripe.com/express/oauth/authorize?client_id=ca_HWHml&redirect_uri=&state=c3vss1dh5s5iqdchht00&suggested_capabilities='
                properties:
                  linked_account:
                    type: object
                    required:
                      - created_at
                      - updated_at
                      - deleted_at
                      - ID
                      - type
                      - amount
                      - account_id
                      - linked_account_id
                    properties:
                      created_at:
                        type: string
                        minLength: 1
                      updated_at:
                        type: string
                        minLength: 1
                      deleted_at:
                        type: object
                        required:
                          - Time
                          - Valid
                        properties:
                          Time:
                            type: string
                            minLength: 1
                          Valid:
                            type: boolean
                      ID:
                        type: number
                      type:
                        type: string
                        minLength: 1
                      token: {}
                      amount:
                        type: number
                      account_id:
                        type: number
                      linked_account_id:
                        type: number
                  slug:
                    type: string
                    minLength: 1
                    description: Slug to create a stripe connect account with the linked user
                required:
                  - linked_account
                  - slug
              examples:
                Example:
                  value:
                    linked_account:
                      created_at: '2021-07-13T00:01:04.28885+05:30'
                      updated_at: '2021-07-13T00:01:04.28885+05:30'
                      deleted_at:
                        Time: '0001-01-01T00:00:00Z'
                        Valid: false
                      ID: 3
                      type: stripe
                      token: null
                      amount: 0
                      account_id: 2
                      linked_account_id: 18
                    slug: 'https://connect.stripe.com/express/oauth/authorize?client_id=ca_HWHmlIa0RL&redirect_uri=&state=c3vss1dh5s5iqdchht00&suggested_capabilities='
      operationId: post-linked-account
      description: To create a linked account
      parameters:
        - schema:
            type: string
          in: header
          name: authorization
          description: user token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  user_id: 43437383-f0cf-41dc-a963-34a26b5facc7
                  currency: usd
                  redirect_url: 'https://dev.shoptype.com/dashboard'
              properties:
                user_id:
                  type: string
                  minLength: 1
                currency:
                  type: string
                  minLength: 1
                redirect_url:
                  type: string
                  minLength: 1
                  description: Optional field - pass this in order to from the stripe connect slug with a redirect uri
              required:
                - user_id
                - currency
    get:
      summary: Fetch all linked accounts
      tags:
        - linkedAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LinkedAccount'
              examples:
                example-1 when stripe connect is not complete - token field is null:
                  value:
                    - created_at: '2021-07-13T00:01:04.28885+05:30'
                      updated_at: '2021-07-13T00:01:04.28885+05:30'
                      deleted_at:
                        Time: '0001-01-01T00:00:00Z'
                        Valid: false
                      ID: 3
                      type: stripe
                      token: null
                      amount: 0
                      account_id: 2
                      linked_account_id: 18
                      user_id: db95654b-d967-4470-94d6-0f309072ecb7
                      linked_user_id: 43437383-f0cf-41dc-a963-34a26b5facc7
                      account_name: puma_account
                      asset_type_unit: usd
                    - created_at: '2021-07-14T16:06:01.494116+05:30'
                      updated_at: '2021-07-14T16:06:01.494116+05:30'
                      deleted_at:
                        Time: '0001-01-01T00:00:00Z'
                        Valid: false
                      ID: 4
                      type: stripe
                      token: null
                      amount: 0
                      account_id: 6
                      linked_account_id: 17
                      user_id: db95654b-d967-4470-94d6-0f309072ecb7
                      linked_user_id: 43437383-f0cf-41dc-a963-34a26b5facc7
                      account_name: puma_account
                      asset_type_unit: cad
                example-2 when stripe connect is done - token object has stripe connect details:
                  value:
                    - created_at: string
                      updated_at: string
                      deleted_at:
                        Time: string
                        Valid: true
                      ID: 0
                      type: string
                      token:
                        scope: string
                        livemode: true
                        token_type: string
                        access_token: string
                        refresh_token: string
                        stripe_user_id: string
                        stripe_publishable_key: string
                      amount: 0
                      account_id: 0
                      linked_account_id: 0
                      user_id: string
                      linked_user_id: string
                      account_name: string
                      asset_type_unit: string
      operationId: get-linked-account
      description: Fetches all the existing linked accounts for the user
      parameters:
        - schema:
            type: string
          in: header
          name: authorization
          description: user token
          required: true
        - schema:
            type: integer
          in: query
          name: linkedAccountId
          description: Filter by linked account
        - schema:
            type: string
          in: query
          name: currency
          description: 'Filter by currency - usd, cad, brl, etc'
  '/linked-account/stripe-connect/slug/{linkedAccountId}':
    parameters:
      - schema:
          type: string
        name: linkedAccountId
        in: path
        required: true
    get:
      summary: Get stripe connect slug for the linked account
      tags:
        - linkedAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  slug:
                    type: string
                    minLength: 1
                required:
                  - slug
                x-examples:
                  example-1:
                    slug: 'https://connect.stripe.com/express/oauth/authorize?client_id=ca_HWHmlIa0RLpKSCKaFD1yWfq8Ns9xhvWu&redirect_uri=https%3Atest&state=c3vt4e5h5s5iqdchht0g&suggested_capabilities='
              examples:
                example-1:
                  value:
                    slug: 'https://connect.stripe.com/express/oauth/authorize?client_id=ca_HWHmlIa0RLpK&redirect_uri=https%3Atest&state=c3vt4e5h5s5iqdchht0g&suggested_capabilities='
      operationId: get-linked-account-stripe-connect-slug-linkedAccountId
      description: Generates a slug for completing the stripe-connect kyc with the linked account
      parameters:
        - schema:
            type: string
          in: header
          name: authorization
          description: user token
          required: true
        - schema:
            type: string
          in: query
          name: redirectUri
          description: Redirect uri for redirecting after completing stripe connect kyc
  /withdraw:
    post:
      summary: Withdraw money from wallet
      operationId: post-withdraw
      responses:
        '200':
          description: OK
      parameters:
        - schema:
            type: string
          in: header
          name: authorization
          description: user token
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                asset_type_id:
                  type: number
                payment_method_type:
                  type: string
                  minLength: 1
                withdraw_params:
                  type: object
                  required:
                    - currency
                  properties:
                    amount:
                      type: number
                    currency:
                      type: string
              required:
                - asset_type_id
                - payment_method_type
                - withdraw_params
            examples:
              stripe:
                value:
                  asset_type_id: 2
                  payment_method_type: stripe
                  withdraw_params:
                    amount: 350
                    currency: usd
              razorpay:
                value:
                  asset_type_id: 1
                  payment_method_type: razorpay
                  withdraw_params:
                    fund_account_id: fa_GFZPpnZ0EdZP5F
                    amount: 15.12
                    currency: INR
                    mode: IMPS
                    purpose: payout
                    queue_if_low_balance: true
                    reference_id: Acme Transaction ID 12345
                    narration: Acme Corp Fund Transfer
      description: Withdraw money from wallet
      tags:
        - withdraw
  /composite-withdraw:
    post:
      summary: Composite withdraw
      operationId: post-composite-withdraw
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
      description: Composite withdraw allows a buyer to add an account and withdraw at same time. This is currently supported only for razorpay.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                asset_type_id:
                  type: number
                payment_method_type:
                  type: string
                  minLength: 1
                  enum:
                    - razorpay
                composite_withdraw_params:
                  type: object
                  required:
                    - amount
                    - currency
                  properties:
                    amount:
                      type: number
                    currency:
                      type: string
                      minLength: 1
              required:
                - asset_type_id
                - payment_method_type
                - composite_withdraw_params
            examples:
              Razorpay:
                value:
                  asset_type_id: 1
                  payment_method_type: razorpay
                  composite_withdraw_params:
                    amount: 15.12
                    currency: INR
                    mode: IMPS
                    purpose: payout
                    queue_if_low_balance: true
                    reference_id: Acme Transaction ID 12345
                    narration: Acme Corp Fund Transfer
                    fund_account:
                      account_type: bank_account
                      bank_account:
                        name: Goru Kumar
                        ifsc: HDFC0001234
                        account_number: '1121431121541121'
                      contact:
                        name: Goru Kumar
                        email: goru.kumar@example.com
                        contact: '9876543210'
                        type: vendor
                        reference_id: Acme Contact ID 12345
                        notes:
                          notes_key_1: 'Tea, Earl Grey, Hot'
                          notes_key_2: 'Tea, Earl Grey… decaf.'
        description: ''
      tags:
        - withdraw
  /stripe-connect/slug:
    get:
      summary: Fetch stripe connect slug
      tags:
        - stripe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  slug:
                    type: string
                    minLength: 1
                required:
                  - slug
              examples:
                Sample response:
                  value:
                    slug: 'https://connect.stripe.com/express/oauth/authorize?client_id=ca_HWHmlIa0RLpKSCKaFD1yWfq8Ns9xhvWu&redirect_uri=https%3A%2F%2Fdev.awake.money%2Fdashboard&state=c1q23fgkars5tnut6g1g'
      operationId: get-stripe-connect-slug
      description: Fetch the slug for stripe connect
      parameters:
        - schema:
            type: string
          in: header
          name: authorization
          required: true
          description: user token
        - schema:
            type: string
            example: 'https://dev.awake.money/dashboard'
          in: query
          name: requestUri
          description: Redirection URL
        - schema:
            type: string
            default: usd
          in: query
          name: currency
          description: Currency in string
          required: true
  /stripe-connect/verification/confirm:
    post:
      summary: ''
      operationId: post-stripe-connect-verification-confirm
      responses:
        '200':
          description: OK
      tags:
        - stripe
      parameters:
        - schema:
            type: string
          in: header
          name: authorization
          description: user token
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                payment_method_type:
                  type: string
                  minLength: 1
                code:
                  type: string
                  minLength: 1
                currency:
                  type: string
                  default: usd
              required:
                - payment_method_type
                - code
                - currency
            examples:
              Sample body:
                value:
                  payment_method_type: stripe
                  code: ac_IBnThr9P5nfraiI89jsinSExA0LOCOKF
                  currency: cad
              example-2:
                value:
                  payment_method_type: string
                  code: string
                  currency: cad
              example-3:
                value:
                  payment_method_type: string
                  code: string
                  currency: usd
      description: |-
        Needs to be invoked once user is redirected back to native page after finishing stripe connect steps.

        ### Please refer to below link for responses
        - https://stripe.com/docs/connect/oauth-reference
  /stripe-connect/details:
    get:
      summary: Fetch stripe connect details
      tags:
        - stripe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              examples:
                Sample response:
                  value:
                    scope: express
                    livemode: false
                    token_type: bearer
                    access_token: sk_test_51IC4QT2XzsGnVHHi1WYRkmSPwLyk0QnEorWCekV0G2wEYc2KbuY2FWzU5jTofQXIuTIbYnTwzuhbFFu7vsX2t7n500iYDWq97A
                    refresh_token: rt_Infoyas5WIwbNr5NhuwDxAtrlAJ7TpuTTkbhx6B5q0FzAwUq
                    stripe_user_id: acct_1IC4QT2XzsGnVHHi
                    stripe_publishable_key: pk_test_51IC4QT2XzsGnVHHieyCtGeotLosgiEQOUZ1HNoW3k2SjOZhQzz1y171tjxHGTpaSCfgmHcVCodKx6S5E7uAixTTA00ZBgZMVsp
      operationId: get-stripe-connect-details
      description: |-
        Fetch stripe connect details
        ### Please refer to below link for responses
        - https://stripe.com/docs/connect/oauth-reference
      parameters:
        - schema:
            type: string
          in: header
          name: authorization
          description: user token
        - schema:
            type: string
            default: usd
          in: query
          name: currency
          description: Currency in string
          required: true
  /razorpay/contacts:
    get:
      summary: Fetch existing contacts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value: {}
      operationId: get-razorpay-contacts
      description: Fetches all the contacts for the logged in user.
      parameters:
        - schema:
            type: string
          in: header
          name: authorization
          description: Login token
          required: true
      tags:
        - razorpay
  /linked-account/stripe-connect/confirm:
    post:
      summary: Confirm the stripe-connect kyc
      tags:
        - linkedAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  scope:
                    type: string
                    minLength: 1
                  livemode:
                    type: boolean
                  token_type:
                    type: string
                    minLength: 1
                  access_token:
                    type: string
                    minLength: 1
                  refresh_token:
                    type: string
                    minLength: 1
                  stripe_user_id:
                    type: string
                    minLength: 1
                  stripe_publishable_key:
                    type: string
                    minLength: 1
                required:
                  - scope
                  - livemode
                  - token_type
                  - access_token
                  - refresh_token
                  - stripe_user_id
                  - stripe_publishable_key
                x-examples:
                  example-1:
                    scope: express
                    livemode: false
                    token_type: bearer
                    access_token: sk_test_****
                    refresh_token: rt_JIlA86YqHgt5tIBIOPENPB36JGRFZ9C3qXTFAX9SOEAKzYlm
                    stripe_user_id: acct_****
                    stripe_publishable_key: pk_test_****
              examples:
                example-1:
                  value:
                    scope: express
                    livemode: false
                    token_type: bearer
                    access_token: sk_test_****
                    refresh_token: rt_JIlA86YqHgt5tIBIOPENPB36JGRFZ9C3qXTFAX9SOEAKzYlm
                    stripe_user_id: acct_****
                    stripe_publishable_key: pk_test_****
          headers: {}
      operationId: post-linked-account-stripe-connect-confirm
      parameters:
        - schema:
            type: string
          in: header
          name: authorization
          description: user token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  account_id: 18
                  code: ac_IBnThr9P5nfraiI89jsinSExA0LOCOKF
              properties:
                account_id:
                  type: number
                  description: linked account id
                code:
                  type: string
                  minLength: 1
                  description: code received from stripe redirect uri
              required:
                - account_id
                - code
      description: API call to be made after the stripe-connect kyc is complete
components:
  schemas:
    Transaction:
      description: |-
        - Following assets are supported in Awake Money

        | Asset type ID | Asset type | Asset Type Unit |
        | ------ | ------ | ------ |
        | 1 | [cash] | [inr] |
        | 2 | [cash] | [usd] |
      type: object
      title: Transaction
      properties:
        id:
          type: number
          description: ID
        amount:
          type: number
          description: ''
        entry_type:
          type: string
          minLength: 1
          description: Credit or Debit
          enum:
            - C
            - D
        created_at:
          type: string
          minLength: 1
        transaction_id:
          type: number
        account_id:
          type: number
        asset_type_id:
          type: number
          description: Asset Type ID
        ref:
          type: string
          minLength: 1
        asset_type_unit:
          type: string
          minLength: 1
          description: Asset Type Unit
      required:
        - id
        - amount
        - entry_type
        - created_at
        - transaction_id
        - account_id
        - asset_type_id
        - ref
        - asset_type_unit
      x-examples:
        Sample transaction:
          id: 1422
          amount: 3.89
          entry_type: C
          created_at: '2021-02-13T18:08:38.865135Z'
          transaction_id: 283
          account_id: 11
          asset_type_id: 2
          ref: 'Order purchased on shop-type for order : 1518'
          asset_type_unit: usd
    Account:
      description: |-
        Asset Type Id

        | Currency | Asset Type Id |
        | ------ | ------ |
        | INR | 1 |
        | USD | 2 |
        | BRL | 3 |
        | CAD | 4 |
      type: object
      properties:
        created_at:
          type: string
          minLength: 1
        updated_at:
          type: string
          minLength: 1
        deleted_at:
          type: object
          properties:
            Time:
              type: string
              minLength: 1
            Valid:
              type: boolean
          required:
            - Time
            - Valid
        id:
          type: number
        name:
          type: string
          minLength: 1
        amount:
          type: number
        amount_on_hold:
          type: number
        user_id:
          type: string
          minLength: 1
        account_type_id:
          type: number
        asset_type_id:
          type: number
        asset_type:
          type: string
          minLength: 1
        asset_type_unit:
          type: string
          minLength: 1
      required:
        - created_at
        - updated_at
        - deleted_at
        - id
        - name
        - amount
        - amount_on_hold
        - user_id
        - account_type_id
        - asset_type_id
        - asset_type
        - asset_type_unit
      title: Account
    LinkedAccount:
      description: |-
        Linked Account Model represents the relationship between the logged in user and the user to which it is connected to.

        For example: Puma is a network, and Puma Kolkata & Puma Bengaluru are its vendor

        Then in this case
        Puma Kolkata is the logged in user
        Puma network is the connected account (ref to linked_account_id)
      type: object
      x-examples:
        Sample response when stripe connect is done for the connected account id:
          created_at: '2021-04-14T14:24:27.906163Z'
          updated_at: '2021-05-07T12:47:07.543414Z'
          deleted_at:
            Time: '0001-01-01T00:00:00Z'
            Valid: false
          ID: 28
          type: stripe
          token:
            scope: express
            livemode: false
            token_type: bearer
            access_token: sk_test_51Ig9bz2VdLJ2xI5aLPqPov6eErFx3FDJurONOjU4mcBABZgKLEIyYcYuBbLcFceF8l1JveN8qJXfx2NCPCw5ZgLz00oWuM8YqO
            refresh_token: rt_JIlA86YqHgt5tIBIOPENPB36JGRFZ9C3qXTFAX9SOEAKzYlm
            stripe_user_id: acct_1HcBy3F8kUHsrC3q
            stripe_publishable_key: pk_test_51Ig9bz2VdLJ2xI5aeRkIix8bHxg6nQgIHB6gFd1s1RDhesn9w6zSEWjPj6EhNwYMlv1cpzXpgu4ph0htTyUV2yE900cfxhAJrJ
          amount: 0
          account_id: 103
          linked_account_id: 32
          user_id: db95654b-d967-4470-94d6-0f309072ecb7
          linked_user_id: 947e4238-b01c-4aee-afce-ad611bb5550c
          account_name: Walter_account
          asset_type_unit: usd
          value:
            created_at: '2021-04-14T14:24:27.906163Z'
            updated_at: '2021-05-07T12:47:07.543414Z'
            deleted_at:
              Time: '0001-01-01T00:00:00Z'
              Valid: false
            ID: 28
            type: stripe
            token:
              scope: express
              livemode: false
              token_type: bearer
              access_token: sk_test_****
              refresh_token: rt_JIlA86YqHgt5tIBIOPENPB36JGRFZ9C3qXTFAX9SOEAKzYlm
              stripe_user_id: acct_****
              stripe_publishable_key: pk_test_****
            amount: 0
            account_id: 103
            linked_account_id: 32
            user_id: db95654b-d967-4470-94d6-0f309072ecb7
            linked_user_id: 947e4238-b01c-4aee-afce-ad611bb5550c
            account_name: Walter_account
            asset_type_unit: usd
        Sample response when stripe connect is not done for the connected account id:
          value:
            created_at: string
            updated_at: string
            deleted_at:
              Time: string
              Valid: true
            ID: 0
            type: string
            token: null
            amount: 0
            account_id: 0
            linked_account_id: 0
            user_id: string
            linked_user_id: string
            account_name: string
            asset_type_unit: string
      properties:
        created_at:
          type: string
          minLength: 1
        updated_at:
          type: string
          minLength: 1
        deleted_at:
          type: object
          required:
            - Time
            - Valid
          properties:
            Time:
              type: string
              minLength: 1
            Valid:
              type: boolean
        ID:
          type: number
        type:
          type: string
          minLength: 1
        token:
          type: object
          required:
            - scope
            - livemode
            - token_type
            - access_token
            - refresh_token
            - stripe_user_id
            - stripe_publishable_key
          properties:
            scope:
              type: string
              minLength: 1
            livemode:
              type: boolean
            token_type:
              type: string
              minLength: 1
            access_token:
              type: string
              minLength: 1
            refresh_token:
              type: string
              minLength: 1
            stripe_user_id:
              type: string
              minLength: 1
            stripe_publishable_key:
              type: string
              minLength: 1
        amount:
          type: number
          description: Sub-wallet amount
        account_id:
          type: number
          description: Account ID of the logged in user
        linked_account_id:
          type: number
          description: Account ID to which the user is connected to
        user_id:
          type: string
          minLength: 1
        linked_user_id:
          type: string
          minLength: 1
        account_name:
          type: string
          minLength: 1
        asset_type_unit:
          type: string
          minLength: 1
      required:
        - created_at
        - updated_at
        - deleted_at
        - ID
        - type
        - token
        - amount
        - account_id
        - linked_account_id
        - user_id
        - linked_user_id
        - account_name
        - asset_type_unit
      title: ''
